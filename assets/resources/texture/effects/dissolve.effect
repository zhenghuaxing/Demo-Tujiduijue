// Copyright (c) 2017-2018 Xiamen Yaji Software Co., Ltd.  

CCEffect %{
  techniques:
  - passes:
    - vert: vs
      frag: fs
      blendState:
        targets:
        - blend: true
      rasterizerState:
        cullMode: none
      properties:
        texture: { value: white }
        alphaThreshold: { value: 0.5 }
        disLevel: {
          value: 0.5,
          editor: {
            tooltip: "稀释等级"
          }
        }
        disColor: { 
          value: [0.0, 0.0, 0.0, 1.0], 
          editor: { 
            type: color,
            tooltip: "稀释颜色"
          } 
        } 
        disTexture: {value: white }
}%


CCProgram vs %{
  precision highp float;

  #include <cc-global>
  #include <cc-local>
  in vec3 a_position;
  in vec4 a_color;
  out vec4 v_color;
  #if USE_TEXTURE
  in vec2 a_uv0;
  out vec2 v_uv0;
  #endif


  void main () {
    vec4 pos = vec4(a_position, 1);

    #if CC_USE_MODEL
    pos = cc_matViewProj * cc_matWorld * pos;
    #else
    pos = cc_matViewProj * pos;
    #endif

    #if USE_TEXTURE
    v_uv0 = a_uv0;
    #endif


    v_color = a_color;

    gl_Position = pos;
  }
}%


CCProgram fs %{
  precision highp float;
  
  #include <alpha-test>

  in vec4 v_color;

  #if USE_TEXTURE
  in vec2 v_uv0;
  uniform sampler2D texture;
  #endif

  #if USE_DIS
  uniform dis_photo {
     vec4 disColor;
    float disLevel;
  };
  uniform sampler2D disTexture;
  #endif

  void main () {
    vec4 o = vec4(1, 1, 1, 1);
    #if USE_TEXTURE
      o *= texture(texture, v_uv0);
      #if CC_USE_ALPHA_ATLAS_TEXTURE
      o.a *= texture2D(texture, v_uv0 + vec2(0, 0.5)).r;
      #endif
    #endif
   //o *= v_color;
    #if USE_DIS
    vec4 o2 = vec4(1, 1, 1, 1);
    o2 *= texture(disTexture, v_uv0/vec2(0.3,0.3));
    float hh = o2.r;
    if(hh < disLevel)
    {
      discard;
    }
    if(hh < disLevel+0.1)
    {
      // 溶解颜色，可以自定义
      o = vec4(disColor.r,disColor.g,disColor.b,o.a);
    }
    //o /= color;
    #endif
    
    ALPHA_TEST(o);
    gl_FragColor = o;
  }
}%
